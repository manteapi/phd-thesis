
Pipe-line : show image instead of text ?


[Whole pipe-line showed]
1.1 -We present a method offering interactive artistic control over an animation of liquid.
1.2 - Here is the pipe-line of our process:

[First block selected]
2.1 - Starting from an input animation (represented as a raw mesh sequence), we semi-automatically compute a continuous space-time structure that we call "space time features".

[Second block selected]
2.2 - Those features can be manipulated using standard tools: selection, copy, paste, export, and import, as well as using space-time feature sepecific tools such as trajectory editing.

[Third block selected]
2.3 - The output of this process is a new, artist-created animation.

-----------------------------------------

[Feature extraction]
3.1 - Features extraction is the first step of our pipeline.
3.2 - It composes itself of three steps: detection, segmentation, and aggregation.

[Detection highlighted -> transition to live detection demo]
4.1 - The detection step aims at selecting a region of interest on each frame of the animation.
4.2 - We offer to create these zones using the curvature of the mesh sequence.
4.3 - Once the regions have been created, it can be refined using topological filters such as erosion and dilatation.

[Segmentation highlighted -> transition to live segmentation demo]
5.1 - The segmentation step aims at separating the interest regions of each frame into connected components.
5.2 - We call the resulting structure "frame features"; it is coherent spatially but not temporally.

[Aggregation highlighted -> transition to live aggregation demo]
6.1 - The aggregation step aims at grouping frame features accross frames for ensuring time consistency.
6.2 - Space time features emerge from this step.

-----------------------------------------

[Feature manipulation]
7.1 - Features manipulation mainly consists in three steps: selection, editing, and insertion.


[Selection highlighted -> transition to live selection demo]
8.1 - Selection is made through a simple click.
8.2 - The selected features can then be copied into the clipboard.
8.3 - They are stored per frame in a format independant from the original animation;
8.4 - Namely: a mesh, or a displacement field, depending on the topology of the frame feature.

[Editing & Insertion highlighted -> transition to live editing/insertion demo]
9.1 - Editing consists in manipulating a features before inserting it back to the animation.
9.2 - For instance, the position, the scale, and the orientation of the feature can be changed easily.
9.3 - Insertion allows to paste a feature inside an animation at a given frame.



-----------------------------------------

[Results]
10.1 - Here are some results obtained with our method.

[Bunny]
11.1 - Here on the left, the splash of a falling drop has been simulated using an eulerian physical model.
11.2 - On the right, the animation is composed of identical frames representing a bunny.
11.3 - Here, the splash of the first animation has been captured as a space-time feature and pasted on the back of bunny.


[Boat]
12.1 - Here on the left, the wake of a boat has been simulated using a lagrangian simulation.
12.2 - On the right, the animation of an ocean has been creted using a procedural model.
12.3 - Both have been combined using space-time feature copy-paste.

[Multiple boats]
13.1 - Once extracted, a given space-time feature can be pasted multiple times.
13.2 - Here, the same boat wake has been pasted three times in the same animation using different transformations.


[Multiple drops]
14.1 - Here, the same has been done with drops.

[Final]
15.1 - Thank you!

